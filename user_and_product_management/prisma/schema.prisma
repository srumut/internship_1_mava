generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "sqlite"
    url      = "file:../db/database.db"
}

model User {
    id        String   @id
    username  String   @unique
    password  String
    name      String
    surname   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Order     Order[]

    @@map("user")
}

model Company {
    id        String   @id
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Branch    Branch[]

    @@map("company")
}

model Branch {
    id         String    @id
    name       String
    company_id String
    company    Company   @relation(fields: [company_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
    Product    Product[]
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt

    @@map("branch")
}

model Product {
    id            String          @id
    name          String
    stock         Int
    branch_id     String
    branch        Branch          @relation(fields: [branch_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
    OrderProducts OrderProducts[]
    category_id   String
    category      Category        @relation(fields: [category_id], references: [id], onUpdate: Cascade, onDelete: NoAction)

    @@unique([branch_id, name])
    @@map("product")
}

model Admin {
    id        String   @id
    username  String   @unique
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("admin")
}

model Order {
    id            String          @id
    user_id       String
    user          User            @relation(fields: [user_id], references: [id])
    OrderProducts OrderProducts[]
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt

    @@map("order")
}

model OrderProducts {
    order_id   String
    order      Order   @relation(fields: [order_id], references: [id])
    product_id String
    product    Product @relation(fields: [product_id], references: [id])
    count      Int

    @@id([order_id, product_id])
    @@map("order_products")
}

model Category {
    id          String    @id
    name        String
    description String
    Product     Product[]
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    @@map("category")
}
