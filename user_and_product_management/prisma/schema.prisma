// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "sqlite"
    url      = "file:../db/database.db"
}

model User {
    id         String     @id
    username   String     @unique
    password   String
    name       String
    surname    String
    profession Profession
    createdAt  DateTime
    updatedAt  DateTime   @updatedAt
    Order      Order[]

    @@map("user")
}

model Brand {
    id        String    @id
    name      String
    Product   Product[]
    createdAt DateTime
    updatedAt DateTime  @updatedAt

    @@map("brand")
}

model Product {
    id            String          @id
    name          String
    stock         Int
    brand_id      String
    brand         Brand           @relation(fields: [brand_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
    createdAt     DateTime
    updatedAt     DateTime        @updatedAt
    OrderProducts OrderProducts[]
    category_id   String
    category      Category        @relation(fields: [category_id], references: [id], onUpdate: Cascade, onDelete: NoAction)

    @@unique([brand_id, name])
    @@map("product")
}

model Admin {
    id        String   @id
    username  String   @unique
    password  String
    createdAt DateTime
    updatedAt DateTime @updatedAt

    @@map("admin")
}

model Order {
    id            String          @id
    user_id       String
    user          User            @relation(fields: [user_id], references: [id])
    OrderProducts OrderProducts[]
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
}

model OrderProducts {
    order_id   String
    order      Order   @relation(fields: [order_id], references: [id])
    product_id String
    product    Product @relation(fields: [product_id], references: [id])
    count      Int

    @@id([order_id, product_id])
    @@map("order_products")
}

model Category {
    id          String    @id
    name        String
    description String
    Product     Product[]

    @@map("category")
}

enum Profession {
    MANAGER
    TEAM_LEADER
    SALES_PECIALIST
    ACCOUNTANT
}
